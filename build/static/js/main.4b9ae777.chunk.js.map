{"version":3,"sources":["cmps/SwitchMode/SwitchMode.jsx","cmps/AppHeader/AppHeader.jsx","services/coins.service.js","context/CoinsContext.js","services/util.service.js","cmps/CoinPreview/CoinPreview.jsx","cmps/CoinList/CoinList.jsx","cmps/ChartGroup/ChartGroup.jsx","pages/CoinsChart/CoinsChart.jsx","cmps/FilterMenu/FilterMenu.jsx","cmps/CoinsTableHead/CoinsTableHead.jsx","cmps/MinChart/MinChart.jsx","cmps/OptionsMenu/OptionsMenu.jsx","cmps/CoinTableBody/CoinTableBody.jsx","pages/CoinsTable/CoinsTable.jsx","App.js","reportWebVitals.js","index.js"],"names":["SwitchMode","toggleDarkMode","useState","checkedA","checkedB","state","setState","FormGroup","row","FormControlLabel","label","control","Switch","checked","onChange","event","target","name","color","useHeaderStyles","makeStyles","theme","highlight","palette","type","text","primary","backgroundColor","secondary","title","fontSize","AppHeader","classes","window","innerWidth","size","setSize","right","useEffect","addEventListener","handleResize","resize","toggleDrawer","anchor","open","key","className","to","Typography","variant","id","component","map","IconButton","edge","aria-label","onClick","SwipeableDrawer","onClose","onOpen","style","width","coinsService","getCoinsRate","getMarketGraph","a","axios","get","res","data","coins","console","error","range","coinId","chart","CoinsContext","createContext","CoinsProvider","children","setCoins","coinsToCompare","setCoinsToCompare","loadCoins","log","addCoinToCompare","compareCoinPrice","JSON","parse","stringify","forEach","coin","priceRates","prevState","Provider","value","removeCoin","isChart","coinsData","idx","findIndex","splice","useCoins","useContext","utilService","delay","ms","Promise","resolve","setTimeout","getRandomInt","min","max","Math","ceil","floor","random","makeId","length","txt","possible","i","charAt","descendingComparator","getComparator","order","orderBy","b","stableSort","array","comparator","stabilizedThis","el","index","sort","nFormatter","num","digits","si","symbol","toFixed","replace","saveToStorage","localStorage","setItem","loadFromStorage","getItem","undefined","getRandomColor","CoinPreview","src","icon","alt","ev","stopPropagation","handleRemoveCoin","CoinList","ChartGroup","toggleChartValue","FormControl","RadioGroup","flexDirection","Radio","useStyles","main","lighten","light","dark","CoinsChart","props","setValue","labels","period","moment","format","datasets","fill","borderColor","tension","pointRadius","options","grid","display","scales","x","ticks","maxTicksLimit","y","root","paper","marginRight","spacing","FilterMenu","headCells","setOpen","anchorRef","useRef","checkedF","checkedG","handleClose","current","contains","handleListKeyDown","preventDefault","prevOpen","focus","Button","ref","aria-controls","aria-haspopup","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","numeric","disablePadding","CoinsTableHead","onRequestSort","TableHead","TableRow","headCell","TableCell","align","padding","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","MinChart","price","coinPrice","setCoinPrice","loadCoinPrice","OptionsMenu","isAdd","setAdd","handleNotificationClose","reason","handleToggle","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","action","MenuItem","handleAddToCompare","CoinTableBody","page","rowsPerPage","emptyRows","selected","isHide","handleClick","TableBody","slice","isItemSelected","indexOf","labelId","hover","aria-checked","tabIndex","scope","rank","priceChange1d","toLocaleString","priceBtc","marketCap","volume","priceChange1w","height","colSpan","marginBottom","table","minWidth","border","clip","margin","overflow","position","top","flex","alignItems","CoinsTable","setOrder","setOrderBy","setSelected","setPage","setRowsPerPage","TableContainer","Table","aria-labelledby","numSelected","onSelectAllClick","newSelecteds","n","rowCount","selectedIndex","newSelected","concat","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","App","prefersDarkMode","setDarkMode","useMemo","createMuiTheme","Container","fixed","ThemeProvider","CssBaseline","exact","from","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b9ae777.chunk.js","sourcesContent":["import FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport './SwitchMode.scss'\nimport { useState } from 'react';\n\nexport const SwitchMode = ({ toggleDarkMode }) => {\n    const [state, setState] = useState({\n        checkedA: false,\n        checkedB: true,\n    });\n    const handleChange = (event) => {\n        toggleDarkMode();\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n\n    return (\n        <FormGroup row>\n            <FormControlLabel\n                label=\"Dark Mode\"\n                control={\n                    <Switch\n                        checked={state.checkedA}\n                        onChange={handleChange}\n                        name=\"checkedA\"\n                        color=\"primary\"\n                    />\n                }\n            />\n        </FormGroup>\n    );\n}\n\n","import { IconButton, makeStyles, SwipeableDrawer, Typography } from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { SwitchMode } from '../SwitchMode/SwitchMode';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport './AppHeader.scss'\n\nconst useHeaderStyles = makeStyles((theme) => ({\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.primary,\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.primary,\n            },\n    title:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.primary,\n                backgroundColor: theme.palette.secondary.primary,\n                fontSize: '24px'\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.primary,\n                fontSize: '24px'\n            },\n}));\n\nexport const AppHeader = ({ toggleDarkMode }) => {\n    const classes = useHeaderStyles();\n    const [size, setSize] = useState(window.innerWidth);\n    const [state, setState] = useState({\n        right: false,\n    });\n\n    useEffect(() => {\n        window.addEventListener('resize', handleResize)\n    }, [])\n\n    const handleResize = () => {\n        let resize = window.innerWidth\n        setSize(resize);\n    }\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setState({ ...state, [anchor]: open });\n    };\n    return (\n        <header className=\"flex align-items justify-between app-header mt-3\">\n            <div className=\"logo\">\n                <Link to=\"/table\">\n                    <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                        Yonoo Finance\n                    </Typography>\n                </Link>\n            </div>\n            {size > 550 && <SwitchMode toggleDarkMode={toggleDarkMode} />}\n            {['right'].map((anchor) => (\n                <div key={anchor}>\n                    <IconButton edge=\"start\" className=\"app-header\" color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(anchor, true)}>\n                        <MenuIcon />\n                    </IconButton>\n                    <SwipeableDrawer\n                        anchor={anchor}\n                        open={state[anchor]}\n                        onClose={toggleDrawer(anchor, false)}\n                        onOpen={toggleDrawer(anchor, true)}\n                    >\n                        <ul className='flex column align-center justify-between hg wd mt'>\n                            <Link to=\"/table\" onClick={toggleDrawer(anchor, false)} className=\"flex justify-between align-center\" style={{ width: '60%' }}>\n                                <TableChartIcon className={classes.highlight} />\n                                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                                    Table\n                                </Typography>\n                            </Link>\n                            <Link to=\"/chart\" onClick={toggleDrawer(anchor, false)} className=\"flex justify-between align-center\" style={{ width: '60%' }}>\n                                <TrendingUpIcon className={classes.highlight} />\n                                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                                    Chart\n                                </Typography>\n                            </Link>\n                            {size < 550 && <SwitchMode toggleDarkMode={toggleDarkMode} />}\n                        </ul>\n                    </SwipeableDrawer>\n                </div>\n            ))\n            }\n        </header >\n    )\n}\n\n","import axios from 'axios';\n\nexport const coinsService = {\n    getCoinsRate,\n    getMarketGraph\n};\n\nasync function getCoinsRate() {\n    try {\n        const res = await axios.get('https://api.coinstats.app/public/v1/coins?skip=0&limit=50');\n        return res.data.coins;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nasync function getMarketGraph(range, coinId) {\n    try {\n        const res = await axios.get(`https://api.coinstats.app/public/v1/charts?period=${range}&coinId=${coinId}`);\n        return res.data.chart;\n    } catch (error) {\n        console.error(error);\n    }\n}","import { useEffect, useState, useContext, createContext } from 'react';\nimport { coinsService } from '../services/coins.service';\n\nconst CoinsContext = createContext();\n\nexport const CoinsProvider = ({ children }) => {\n    const [coins, setCoins] = useState([]);\n    const [coinsToCompare, setCoinsToCompare] = useState([]);\n\n\n    useEffect(() => {\n        loadCoins();\n    }, [])\n\n\n\n    const loadCoins = async () => {\n        try {\n            const coins = await coinsService.getCoinsRate();\n            setCoins(coins);\n        } catch (err) {\n            console.log('err-cant load coins', err);\n        }\n    }\n\n    const removeCoin = (coinId, isChart) => {\n        const coinsData = isChart ? JSON.parse(JSON.stringify(coinsToCompare)) : JSON.parse(JSON.stringify(coins))\n        const idx = coinsData.findIndex(coin => coin.id === coinId);\n        if (idx !== -1) {\n            coinsData.splice(idx, 1);\n        }\n        isChart ? setCoinsToCompare(coinsData) : setCoins(coinsData)\n    }\n\n    const addCoinToCompare = async (range, coinId) => {\n        try {\n            const compareCoinPrice = await coinsService.getMarketGraph(range, coinId);\n            const coinsData = JSON.parse(JSON.stringify(coins))\n            coinsData.forEach(coin => {\n                if (coin.id === coinId) {\n                    coin.priceRates = compareCoinPrice\n                    setCoinsToCompare(prevState => [...prevState, coin])\n                }\n            });\n        } catch (err) {\n            console.log('err- cant compare coins', err);\n        }\n    }\n\n    return (\n        <CoinsContext.Provider value={{\n            coins, coinsToCompare, addCoinToCompare, removeCoin,\n        }}>\n            {children}\n        </CoinsContext.Provider>\n    )\n}\n\nexport const useCoins = () => useContext(CoinsContext);","\r\nexport const utilService = {\r\n    delay,\r\n    getRandomInt,\r\n    makeId,\r\n    descendingComparator,\r\n    getComparator,\r\n    stableSort,\r\n    nFormatter,\r\n    saveToStorage,\r\n    loadFromStorage,\r\n    getRandomColor,\r\n}\r\n\r\nfunction delay(ms = 1500) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms)\r\n    })\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction makeId(length = 5) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return txt;\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\nfunction nFormatter(num, digits) {\r\n    var si = [\r\n        { value: 1, symbol: \"\" },\r\n        { value: 1E3, symbol: \"k\" },\r\n        { value: 1E6, symbol: \"M\" },\r\n        { value: 1E9, symbol: \"B\" },\r\n        { value: 1E12, symbol: \"T\" },\r\n        { value: 1E15, symbol: \"Q\" },\r\n    ];\r\n    var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n    var i;\r\n    for (i = si.length - 1; i > 0; i--) {\r\n        if (num >= si[i].value) {\r\n            break;\r\n        }\r\n    }\r\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\r\n}\r\n\r\nfunction saveToStorage(key, value) {\r\n    localStorage.setItem(key, JSON.stringify(value) || null);\r\n}\r\n\r\nfunction loadFromStorage(key) {\r\n    let data = localStorage.getItem(key);\r\n    return (data) ? JSON.parse(data) : undefined;\r\n}\r\n\r\nfunction getRandomColor() {\r\n    return `rgba(${utilService.getRandomInt(1, 255)},${utilService.getRandomInt(1, 255)},${utilService.getRandomInt(1, 255)})`\r\n}\r\n","\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport { useCoins } from '../../context/CoinsContext'\nimport './CoinPreview.scss'\n\nexport const CoinPreview = ({ coin }) => {\n    const { removeCoin } = useCoins();\n\n    const handleRemoveCoin = (ev, coinId) => {\n        ev.stopPropagation();\n        removeCoin(coinId, true)\n        console.log('removed');\n    }\n\n    return (\n        <li className=\"flex coin-preview\">\n            <img src={coin.icon} alt=\"\" />\n            <p className=\"coin-name\">{coin.name}</p>\n            <p className=\"coin-symbol\">{coin.symbol}</p>\n            <DeleteOutlineIcon onClick={(ev) => handleRemoveCoin(ev, coin.id)} />\n        </li >\n    )\n}\n\n","\n\nimport { CoinPreview } from '../CoinPreview/CoinPreview'\nimport './CoinList.scss'\n\nexport const CoinList = ({ coins }) => {\n\n    return (\n        <ul className=\"flex justify-between coin-list\">\n            {coins.map((coin, idx) => {\n                return <CoinPreview coin={coin} key={idx} />\n            })}\n        </ul>\n    )\n}\n\n","import './ChartGroup.scss'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core';\n\n\nexport default function ChartGroup({ toggleChartValue, value }) {\n    const handleChange = (event) => {\n        toggleChartValue(event);\n    }\n\n    return (\n        <FormControl component=\"fieldset\">\n            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange} className='mb-1' style={{ flexDirection: 'row' }}>\n                <FormControlLabel value=\"line\" control={<Radio />} label=\"Line\" />\n                <FormControlLabel value=\"bar\" control={<Radio />} label=\"Bar\" />\n            </RadioGroup>\n        </FormControl >\n    );\n}\n","import './CoinsChart.scss'\nimport { Bar, Line } from 'react-chartjs-2';\nimport moment from 'moment';\nimport { useCoins } from '../../context/CoinsContext';\nimport { utilService } from '../../services/util.service';\nimport { CoinList } from '../../cmps/CoinList/CoinList';\nimport { lighten, makeStyles, Typography } from '@material-ui/core';\nimport ChartGroup from '../../cmps/ChartGroup/ChartGroup';\nimport { useState } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    title:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.primary,\n                backgroundColor: theme.palette.secondary.primary,\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.primary,\n            },\n}));\n\nexport const CoinsChart = (props) => {\n    const classes = useStyles();\n    const [value, setValue] = useState('line');\n    const { coinsToCompare } = useCoins();\n\n\n    const labels = coinsToCompare.map(coin => coin.priceRates.map((period) => moment(period[0]).format('hh')));\n    const data = {\n        labels: labels[0],\n        datasets: coinsToCompare.map(coin => {\n            return {\n                label: coin.symbol,\n                data: coin.priceRates.map(period => period[1]),\n                fill: false,\n                borderColor: utilService.getRandomColor(),\n                backgroundColor: utilService.getRandomColor(),\n                tension: 1,\n                pointRadius: 0,\n            }\n        }),\n    };\n\n    const options = {\n        grid: {\n            display: false\n        },\n        scales: {\n            x: {\n                ticks: {\n                    maxTicksLimit: coinsToCompare.length > 0 && labels[0].length / 40\n                }\n            },\n            y: {\n                ticks: {\n                    maxTicksLimit: coinsToCompare.length > 0 && labels[0].length\n                }\n            }\n        }\n    }\n\n    const toggleChartValue = (event) => {\n        setValue(event.target.value);\n    };\n\n    return (\n        (coinsToCompare.length > 0) ? <section className=\"coins-chart\">\n            <header className='chart-header'>\n                <ChartGroup toggleChartValue={toggleChartValue} value={value} />\n                <CoinList coins={coinsToCompare} />\n            </header>\n            {value === 'line' && <Line data={data} options={options} />}\n            {value === 'bar' && <Bar data={data} options={options} />}\n        </section > : <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                No Crypto Currency To Compare !\n                      </Typography>\n    )\n}\n\n","import { Button, Checkbox, ClickAwayListener, FormControlLabel, Grow, makeStyles, MenuItem, MenuList, Paper, Popper } from '@material-ui/core';\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator';\nimport { useEffect, useRef, useState } from 'react';\nimport './FilterMenu.scss'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        marginRight: theme.spacing(2),\n    },\n}));\n\nexport const FilterMenu = ({ headCells }) => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const anchorRef = useRef(null);\n    const [state, setState] = useState({\n        checkedA: true,\n        checkedB: true,\n        checkedF: true,\n        checkedG: true,\n    });\n\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    function handleListKeyDown(event) {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            setOpen(false);\n        }\n    }\n\n    // return focus to the button when we transitioned from !open -> open\n    const prevOpen = useRef(open);\n    useEffect(() => {\n        if (prevOpen.current === true && open === false) {\n            anchorRef.current.focus();\n        }\n\n        prevOpen.current = open;\n    }, [open]);\n\n    return (\n        <div className={classes.root}>\n            <div>\n                <Button\n                    ref={anchorRef}\n                    aria-controls={open ? 'menu-list-grow' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={handleToggle}\n                >\n                    <DragIndicatorIcon />\n                </Button>\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal className='zIndex'>\n                    {({ TransitionProps, placement }) => (\n                        <Grow\n                            {...TransitionProps}\n                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={handleClose}>\n                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                                    </MenuList>\n                                </ClickAwayListener>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </div>\n        </div>\n    );\n}\n\n","import { TableCell, TableHead, TableRow, TableSortLabel } from '@material-ui/core';\nimport './CoinsTableHead.scss'\nimport { FilterMenu } from '../FilterMenu/FilterMenu'\n\nconst headCells = [\n    { id: 'rank', numeric: true, disablePadding: true, label: '#' },\n    { id: 'name', numeric: false, disablePadding: false, label: 'NAME' },\n    { id: 'priceChange24h', numeric: true, disablePadding: false, label: '24H CHANGE' },\n    { id: 'price', numeric: true, disablePadding: false, label: 'PRICE' },\n    { id: 'priceBtc', numeric: true, disablePadding: false, label: 'PRICE IN BTC' },\n    { id: 'marketCap', numeric: true, disablePadding: false, label: 'MARKET CAP' },\n    { id: 'volume', numeric: true, disablePadding: false, label: 'VOLUME 24H' },\n    { id: 'priceGraph7d', numeric: false, disablePadding: false, label: 'PRICE GRAPH (7D)' },\n];\n\nexport const CoinsTableHead = (props) => {\n    const { classes, order, orderBy, onRequestSort } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'center'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n                <TableCell align=\"center\">\n                    <FilterMenu headCells={headCells} />\n                </TableCell>\n            </TableRow>\n        </TableHead>\n    );\n}\n\n\n","import { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { coinsService } from '../../services/coins.service';\nimport './MinChart.scss'\n\n\n\nexport const MinChart = ({ range, coinId, price }) => {\n    const [coinPrice, setCoinPrice] = useState([]);\n\n    useEffect(() => {\n        loadCoinPrice();\n    }, [])\n\n    const loadCoinPrice = async () => {\n        const coin = await coinsService.getMarketGraph(range, coinId);\n        setCoinPrice(coin)\n    }\n\n    const labels = coinPrice.map(period => period[0]);\n\n    const data = {\n        labels,\n        datasets: [\n            {\n                label: '',\n                fill: false,\n                data: coinPrice.map(period => period[1]),\n                borderColor: price > 0 ? 'green' : 'red',\n                tension: 0.5,\n                backgroundColor: 'white',\n                pointRadius: 0,\n            }\n        ]\n    }\n    const options = {\n        scales: {\n            x: {\n                grid: {\n                    display: false\n                },\n                ticks: {\n                    display: false,\n                }\n            },\n            y: {\n                grid: {\n                    display: false\n                },\n                ticks: {\n                    display: false,\n                }\n            }\n        }\n    }\n    return (\n        (coinPrice.length > 0) && <div>\n            <Line data={data} options={options} />\n        </div>\n    )\n}\n\n","import Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport './OptionsMenu.scss'\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useEffect, useRef, useState } from 'react';\nimport { useCoins } from '../../context/CoinsContext';\nimport { IconButton, Snackbar } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        marginRight: theme.spacing(2),\n    },\n}));\n\nexport const OptionsMenu = ({ coinId, range }) => {\n\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [isAdd, setAdd] = useState(false)\n    const anchorRef = useRef(null);\n    const { removeCoin } = useCoins();\n    const { addCoinToCompare } = useCoins();\n\n\n    const handleNotificationClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setAdd(false);\n    };\n\n    const handleToggle = (ev) => {\n        ev.stopPropagation();\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    function handleListKeyDown(event) {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            setOpen(false);\n        }\n    }\n    const handleRemoveCoin = (ev, coinId) => {\n        ev.stopPropagation();\n        removeCoin(coinId, false);\n        handleClose(ev);\n    }\n\n    const handleAddToCompare = (ev, range, coinId) => {\n        ev.stopPropagation();\n        addCoinToCompare(range, coinId);\n        setAdd(prevState => prevState = !prevState)\n        handleClose(ev);\n    }\n    // return focus to the button when we transitioned from !open -> open\n    const prevOpen = useRef(open);\n    useEffect(() => {\n        if (prevOpen.current === true && open === false) {\n            anchorRef.current.focus();\n        }\n\n        prevOpen.current = open;\n    }, [open]);\n\n    return (\n        <div className={classes.root}>\n            <div>\n                <Button\n                    ref={anchorRef}\n                    aria-controls={open ? 'menu-list-grow' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={(ev) => handleToggle(ev)}\n                >\n                    <MoreHorizIcon />\n                </Button>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                    open={isAdd}\n                    autoHideDuration={1500}\n                    onClose={handleNotificationClose}\n                    message=\"Coin Added Succefully\"\n                    action={\n                        <>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleNotificationClose}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </>\n                    }\n                />\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal className='zIndex'>\n                    {({ TransitionProps, placement }) => (\n                        <Grow\n                            {...TransitionProps}\n                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={handleClose}>\n                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                                        <MenuItem onClick={(ev) => handleAddToCompare(ev, range, coinId)}>Add To Compare</MenuItem>\n                                        <MenuItem onClick={(ev) => handleRemoveCoin(ev, coinId)}>Remove Coin</MenuItem>\n                                    </MenuList>\n                                </ClickAwayListener>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </div>\n        </div>\n    );\n}\n\n","import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport { TableBody, TableCell, TableRow } from '@material-ui/core';\nimport { utilService } from '../../services/util.service';\nimport './CoinTableBody.scss'\nimport { MinChart } from '../MinChart/MinChart';\nimport { OptionsMenu } from '../OptionsMenu';\n\nexport const CoinTableBody = ({ coins, order, orderBy, page, rowsPerPage, emptyRows, selected, isHide, handleClick }) => {\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n    return (\n        <TableBody>\n            {utilService.stableSort(coins, utilService.getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                    const isItemSelected = isSelected(row.name);\n                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                    return (\n                        <TableRow\n                            hover\n                            onClick={(event) => handleClick(event, row.name)}\n                            role=\"checkbox\"\n                            aria-checked={isItemSelected}\n                            tabIndex={-1}\n                            key={row.name}\n                            selected={isItemSelected}\n                        >\n                            <TableCell align=\"center\" component=\"th\" id={labelId} scope=\"row\" padding=\"none\" className={isHide ? 'hide-column' : null}>\n                                {row.rank}\n                            </TableCell>\n                            <TableCell align=\"center\"><div className=\"flex align-center\"><img src={row.icon} alt=\"\" />{row.name}</div></TableCell>\n                            <TableCell align=\"center\" style={row.priceChange1d > 0 ? { color: 'green' } : { color: 'red' }}><div className='flex align-center'>{row.priceChange1d > 0 ? <ExpandLessIcon /> : <ExpandMoreIcon />}{row.priceChange1d}%</div></TableCell>\n                            <TableCell align=\"right\">${row.price.toLocaleString()}</TableCell>\n                            <TableCell align=\"right\">{row.priceBtc.toFixed(8)}</TableCell>\n                            <TableCell align=\"center\">{utilService.nFormatter(row.marketCap, 2)}</TableCell>\n                            <TableCell align=\"center\">{utilService.nFormatter(row.volume, 2)}</TableCell>\n                            <TableCell align=\"center\"><MinChart range={'1w'} coinId={row.id} price={row.priceChange1w} /></TableCell>\n                            <TableCell align=\"center\"><OptionsMenu coinId={row.id} range={'24h'} /></TableCell>\n                        </TableRow>\n                    );\n                })}\n            {emptyRows > 0 && (\n                <TableRow style={{ height: 53 }}>\n                    <TableCell colSpan={6} />\n                </TableRow>\n            )}\n        </TableBody>\n    )\n}\n\n","import { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\nimport { CoinsTableHead } from '../../cmps/CoinsTableHead/CoinsTableHead';\nimport { makeStyles } from '@material-ui/core';\nimport './CoinsTable.scss'\nimport { useCoins } from '../../context/CoinsContext';\nimport { CoinTableBody } from '../../cmps/CoinTableBody/CoinTableBody';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    flex: {\n        display: 'flex',\n        alignItems: 'center',\n    }\n}));\n\nexport const CoinsTable = (props) => {\n    const { coins } = useCoins();\n    const classes = useStyles();\n    const [order, setOrder] = useState('asc');\n    const [orderBy, setOrderBy] = useState('rank');\n    const [selected, setSelected] = useState([]);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = coins.map((n) => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, coins.length - page * rowsPerPage);\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTiEnhancedTableHeadtle\"\n                        size='medium'\n                        aria-label=\"enhanced table\"\n                    >\n                        <CoinsTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={coins.length}\n                        />\n                        <CoinTableBody coins={coins} order={order} orderBy={orderBy} page={page} rowsPerPage={rowsPerPage} emptyRows={emptyRows} selected={selected} handleClick={(event, name) => handleClick(event, name)} />\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={coins.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div >\n    );\n}\n\n","import {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport './App.scss';\nimport './assets/styles/main.scss';\nimport { AppHeader } from './cmps/AppHeader/AppHeader';\nimport { CoinsProvider } from \"./context/CoinsContext\";\nimport { CoinsChart } from './pages/CoinsChart/CoinsChart';\nimport { CoinsTable } from './pages/CoinsTable/CoinsTable';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { useMemo, useState } from \"react\";\nimport Container from '@material-ui/core/Container';\n\n\n\nfunction App(props) {\n  const [prefersDarkMode, setDarkMode] = useState(false);\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  const toggleDarkMode = () => {\n    setDarkMode(!prefersDarkMode);\n  }\n\n  return (\n    <Container fixed>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <div className=\"App\">\n          <Router>\n            <AppHeader toggleDarkMode={toggleDarkMode} />\n            <>\n              <Switch>\n                <Redirect exact from=\"/\" to=\"/table\" />\n                <CoinsProvider>\n                  <Route component={CoinsTable} path={\"/table\"} />\n                  <Route component={CoinsChart} path={\"/chart\"} />\n                </CoinsProvider>\n              </Switch>\n            </>\n          </Router>\n        </div>\n      </ThemeProvider>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/main.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}